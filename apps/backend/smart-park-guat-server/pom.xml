<?xml version="1.0" encoding="UTF-8"?>
<!-- Maven项目对象模型(POM)配置文件，定义了项目的构建配置、依赖关系和插件 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- Maven模型版本 -->
    <modelVersion>4.0.0</modelVersion>

    <!-- 项目组ID，通常使用反向域名标识 -->
    <groupId>cn.guat</groupId>

    <!-- 项目构件ID，定义项目的唯一标识符 -->
    <artifactId>smartpark</artifactId>

    <!-- 项目版本号，SNAPSHOT表示开发中的版本 -->
    <version>0.0.1-SNAPSHOT</version>

    <!-- 项目名称 -->
    <name>smartpark</name>

    <!-- 项目描述 -->
    <description>smartpark</description>

    <!-- 项目属性配置 -->
    <properties>
        <!-- Java版本配置 -->
        <java.version>1.8</java.version>
        <!-- 项目源码编码 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- 项目报告输出编码 -->
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- Spring Boot版本 -->
        <spring-boot.version>2.6.13</spring-boot.version>
    </properties>

    <!-- 项目依赖配置 -->
    <dependencies>
        <!-- Spring Boot Web启动器依赖，用于构建Web应用 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- MySQL连接器依赖，用于连接MySQL数据库 -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- MyBatis Starter -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.3.2</version>
        </dependency>

        <!-- Lombok依赖，用于简化Java代码，减少getter/setter等样板代码 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.30</version>
            <scope>provided</scope>
        </dependency>
        <!-- 【可选】 Fastjson2依赖，用于JSON序列化和反序列化 -->
        <dependency>
            <groupId>com.alibaba.fastjson2</groupId>
            <artifactId>fastjson2</artifactId>
            <version>2.0.29</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
    </dependencies>

    <!-- 依赖管理配置，用于统一管理依赖版本 -->
    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot依赖管理，通过BOM方式统一管理Spring Boot相关依赖的版本 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- 构建配置 -->
    <build>
        <plugins>
            <!-- Maven编译插件，用于编译Java源代码 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <!-- 源代码Java版本 -->
                    <source>1.8</source>
                    <!-- 目标Java版本 -->
                    <target>1.8</target>
                    <!-- 编码格式 -->
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!-- Spring Boot Maven插件，用于打包Spring Boot应用 -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <!-- 主类配置，指定应用程序入口 -->
                    <mainClass>cn.guat.SmartparkApplication</mainClass>
                    <!-- 跳过测试 -->
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <!-- 重新打包目标，创建可执行的JAR文件 -->
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
